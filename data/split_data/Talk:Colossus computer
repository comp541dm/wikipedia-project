4UntitledWould need an infobox to make a higher class, imo -- User:Roleplayer|'''role'''User talk:Roleplayer|'''''player;/em;''''' 01:39, 23 August 2008 (UTC)Turing's Colossus participationAccording to History of computing, Alan Turing was a major participant in the development of Colossus---He was a major participant in the code breaking efforts at Bletchley Park and contributed several mathematical insights, both to breaking the Enigma code and the Lorenz code. He also built the "bombe" there, an electromechanical code breaking device for the Enigma code. He didn't play a major role in design or construction of Colossus; that was Newman's deal.See and --AxelBoldt---Okay, I'll update Alan Turing's article to include that paragraph...---As of September 2, 2011, the article refers no participation from Alan Turing at all.  Is that true?  It is certainly against everything I read ever since I first read the Turing article on the My Computer encyclopedia from Orbis Publishing in 1984.  A brief history of Computing says Turing designed the Colossus.  Is Wikipedia failing to state the single most important fact about Colossus, the identity of its designer?  That would be quite ridiculous, don't you think?  --Ignacio Agulló:All right, now I believe Turing didn't build the Colossus (by the way, I am upset about being misled for about 27 years).  So, I tried to shorten my previous comment, but the change got rolled back.--Ignacio Agulló  — Preceding unsigned comment added by Special:Contributions/91.117.138.142|91.117.138.142 (talk) 16:18, 20 February 2012 (UTC);; ;;Most authors who have studied Colossus say that, other than Turingery, Turing made little or no ''direct'' contribution to the development of the breaking the Lorenz cipher. According to his biographer, Andrew Hodges, Turing had been away from Bletchley Park in the US from November 1942 to April 1943, and whilst there, as well as sharing Bombe secrets, he had studied the scrambling of voice communications at Bell Labs. From September 1934 onwards, he spent an increasing amount of his time at HMGCC, Hanslope Park, working on voice scrambling. However, there seems little doubt that he and his ideas were well known to the developers of the techniques for breaking the Lorenz cipher, so his ideas, particularly the use of statistical techniques - as in Banburismus - probably made a significant ''indirect'' contribution to the development of Colossus. --TedColes (talk) 15:07, 3 September 2011 (UTC):There was a documentary on BBC 2 called "Code-Breakers Bletchley Parks Lost Heroes" where it is made clear who are the key contributers to breaking the Lorenz code. Bletchly park was split into teams and Turing wasn't in that group. While Turing has been widely recognised for his accomplishments in the field of computer science, there were a great many exceptional minds gathered at Bletchly park and it would be a mistake to underrate these other individuals. The history of colossus required feats of code-breaking, mathematics and engineering and it is unlikely that Turing's expertise was needed at any of these stages and was certainly unmentioned in the documentary and would certainly be insignificant compared to Flowers' contribution to Colossus.:The abilities of the others is currently understated on wikipedia in part due to the original secreacy. i.e. John Tiltman is described as showing "considerable skill at cryptanalysis." When the the main source calls him "Bletchley Park's finest cryptanalyst on non-machine ciphers".:Tetron76 (talk) 13:18, 31 October 2011 (UTC)not a general purpose computerIIRC, describing the Colossus as "general-purpose" and "programmable" is stretching things considerably. --Robert Merkel 14:14, 1 Sep 2003 (UTC):That's true.  The main alterable feature was the set of Boolean functions used in the cross-correlation algorithm, which didn't really amount to a "program".  The rest of the functions were fixed.  It would be more accurate to say that it was a fixed-program, single-purpose computer with variable coefficients, and certainly not a stored-program computer, which is what most people mean today by "computer". -- Heron 14:57, 22 Jul 2004 (UTC)Turing complete not importantThis prargraph is not convincing:Whilst Colossus featured (limited) programmability and was the first of the electronic digital machines to do so, it was not a true general purpose computer, not being Turing-complete. It was not then realized that Turing completness was significant, and most of the pioneering modern computing machines (eg, the ABC machine, the Harvard Mark I electro-mechanical relay machine, the Stiebitz Bell Labs relay machines, Konrad Zuse's first two designs, ...) weren't either.Being Turing complete is not a big deal. Even Conways game of life has been shown to be Turing Complete. It has been shown that the Zuse Z3 was Turing complete. This machine did not differ that much from the Analytical engine or the ABC. It is quite possible that the Colossi were Turing complete. At least theorectically. In that it could have been possible to program the machine to perform an arbitary processing task. The issue of theoretical Turing Completion is over rated. The real issue is practical Turing Completion. In that respect all these machines failed to make the grade and so did the Zuse Z3. It was not until the EDSAC that a machine became practically Turing Complete: I would tend to doubt that the Colossi were Turing-complete, actually. For one, the only test/compare capability they had was whether or not to print out counters at the end of each loop if they were greater than a certain hand-set value. For another, there was no real program, and certainly no conditional branch. They really were incredibly specialized to the job of collecting statistical information used to break a particular coding machine. Very ground-breaking technology, but not ground-breaking architecture. Noel (talk) 02:12, 16 Jan 2005 (UTC)----However one may judge the importance of Turing completeness in this or that early machine, the Colossus were in fact the first programmable digital electronic computers. They were anticipated in each of these dimensions by other designs (programmability by the Analytical Engine; electronic by the ABC machine and some of the analog computers; digital by the Analytical Engine and the ABC machine), but in combination, Newman and crew were first. Their programability (even if limited) made them general purpose machines in a non-trivial sense.The point about Turing Completeness is important only by way of getting across a distinction amongst various computing designs -- one that is important theoretically if not in practice (for all machines since the EDVAC). Readers may benefit, if marginally, from inclusion of this point. At least they will have links to follow if they're curious. Thus, I judge it to be 'mostly harmless'. I would keep the paragraph. ww 16:31, 5 Apr 2004 (UTC): The amount of programmability was really limited. About the only thing that was "programmable" (configurable, really) in any general way was which bit conditions (and combinations thereof) would cause counters to increment. The rest was all very specialized to the FISH cipher; e.g. the ability to configure what the bit patterns were on the various wheels which generated the keystream. Hardly "progamming" as it's thought of today. It is really incorrect, IMO, to compare the programmability of Babbage's Analytical engine (which was ''real'' programmability, in the modern sense) with the limited ''configurability'' (which I think is a much more appropriate word) of the Colossus. Noel (talk) 02:12, 16 Jan 2005 (UTC)::Professor Benjamin Wells of the Departments of Computer Science and Mathematics of the University of San Francisco has published an academic paper that is relevant to this.:::::In it he states that "a UTM (Universal Turing machine) could have been implemented on a clustering of the ten Colossus machines installed at Bletchley Park". So, despite it not being a general-purpose machine, Colossus could be said to be Turing complete. I agree that being Turing complete is not a big deal, but some continue to regard it as being effectively synonymous with being general purpose. --TedColes (talk) 16:14, 28 October 2011 (UTC)Never turned off claim probably well foundedI attended a private demonstration of the first general purpose software programmable digital computer (the Manchester Baby) a few years ago, not long after it was put on display.  The British Computer Society had run the project, and did the work in conjunction with as many of the original workers as possible.We were told that yes indeed, the Baby were simply not switched off when being developed, except sometimes, and if it did get powered down, there was hell to pay in terms of blown valves.Since it was Tommy Flowers in charge of building Colossus and the Manchester Baby, I'd say there's no reason to doubt the claim that they didn't switch Colossus off if at all avoidable, but that's not the same as `being on continuously from initial installation to decommissioning'.  Hard to see how that could have been managed.—The preceding unsigned comment was added by Special:Contributions/86.140.201.40|86.140.201.40 (talk) 21:58, 3 April 2007 (UTC).;;;:Valves encounter the greatest thermal stress immediately after turning on as the heaters heat up to operating temperature - what used to be known as ''warming up''. Leaving the valve operating continuously - no hot/cold cycle - removes this stress allowing the valve a greatly increased life. This thermal stress may well be remembered by people who once had a valve TV or radio set. When a valve was on it's last legs the set almost always failed when the TV or radio was turned on.:BTW, Colossus ''was'' left running ''almost'' continuously IIRC, as Flowers had realised that valves almost always failed during the warming-up period and that if left running all the time their lives were increased greatly, making a complex valve-based machine such as Colossus practicable. Many had previously poo-poohed the idea of a valve-based computing machine prior to Colossus for exactly this reason of frequent valve failure.:IIARC, Colossus/the Colossi, was run 24/7 for long periods and only stopped when a valve did eventually fail. IIRC, a more frequent problem was the paper tape breaking and going everywhere due to the high speed involved.  —Preceding unsigned comment added by Special:Contributions/86.112.68.219|86.112.68.219 (talk) 16:47, 21 May 2011 (UTC);; ;;never turned off claim not plausibleHaving been one whose experience with electronic hardware goes far enough back to have burned fingers on hot tubes, I find this claim rational, but not very believable. It is certainly true that thermal stresses at power on and power off time reduced tube life, and so avoiding those stresses by avoiding power cycles is a rational approach. However, real equipment must be powered down to make repairs, add new attachments, fiddle around and so on. Since nearly all tube equipment uses high voltages, working on powered up tube gear is most always dangerous. I cannot believe the Colossi were turned on and stayed on till the end of the War. Unless someone can provide some evidence for this, I'll come back and revise after a decent interval. ww 15:21, 7 Jul 2004 (UTC): Several websites (including ) repeat the claim. User:Matt Crypto|;mdash; Matt 15:49, 7 Jul 2004 (UTC)::That may be so, but the ones I can trace all seem to stem from a claim reported from an interview with Sale. I suspect an underlying exagerration for effect taken (wrongly) by a reporter. Tube equipment had regular failures -- it ran hot (induces failures, perhaps most inevitably in economically manufacturable capacitors), it used considerable current (induces failures, largely from heating effects), high voltages (induces failures), it was dangerous to work on if not switched off (heat, high current, and high voltages), and so on. My doubts are not allayed, alas (and alack too). ww 17:49, 9 Jul 2004 (UTC): Alas for your alack, this claim is also repeated in Randall (1977)::: "Flowers' belief, which turned out to be fully justified, was that given the appropriate design practises, switching circuit networks involving even a large number of valves could be made to work reliably, ''if the equipment could be left on permanently''." (emphasis mine): The same claim is repeated in Johnson, ''The Secret War''::: "There was some opposition to the proposal. Valves had a reputation for unreliability, but Flowers pointed out that from Post Office and BBC experience ''valves that were never switched off were very reliable''." (emphasis mine).: His source was an interview with Flowers himself! So I'd say that this one is pretty solid. Noel (talk) 04:31, 17 Dec 2004 (UTC)::Have just noticed Flowers comments. I still suspect some skew in the meanings here. Flowers' observation is quite correct. But note that he is not reported to have said 'and so we never turned the Colossii off'. I still think that this is engineering hyperbole with regard to the claim about perpetual power on for the machines. Great resistance to turning them off, fix and fiddle as much as possible next to really hot and high voltage stuff, and so on, but... Since Flowers has passed on (and I suppose so have all the others who would know) I think we'll have to remain in ingnorance of the exact fact. But I still doubt it. Those things get hot, and if you look at the photos (and Sales' site for more detail) this is not a machine that is laid out for absolute minimum of little tiny places that are hard to reach. It looks as though they quite sensibly used some sort of ready made rack system and took what they got for serviceablity access. Rarely turned off (and great relutance to turn off, and rules against routine turn off for any reason) seems to me to be about right. ww 19:29, 28 Feb 2005 (UTC): Since I wrote the above, I have gotten a bunch more Colossus material, including the 3 articles (by Flowers, Coombs, and Chandler, respectively) in ''Annals of History of Computing'', and I can now solidly back up the claim that they were in fact not turned off::: "Most of the machines [out of 10 total - JNC], having been installed and handed over, had their valve heaters on literally until the end of the war. There is little doubt that expansion and contraction of valve heaters being switched on and off caused many valve failures in computing equipment built soon after the war." (from Chandler, ''Installation and Maintainence of Colossus'', pp. 262).: This continual uptime was no doubt in part due to the intense operational requirements, but I'm pretty sure that even without that, Flowers' views on attaining reliability would have kept them on. ''Station X'' by Michael Smith contains a direct quote from Flowers on this issue::: "I knew that if you never moved them and never switched them off they would go on forever." (pp. 193): Given the very large number of valves in these things (2,400 in the Mark II's - by way of comparison, the Pilot ACE had only about 800) I'm sure they didn't want to have to look for dead tubes!: There is much more of great interest in these articles (e.g. Chandler's note that the tubes were operated at only 25% of their maximum power dissipation, which reduced heat output and also helped with tube life), but I haven't the energy to type it all in! BTW, I have this recollection that Flowers would not be the best source for operational details of the Colossi - he was the chief designer, but was not at BP. Noel (talk) 03:43, 1 Mar 2005 (UTC)"Since nearly all tube equipment uses high voltages, working on powered up tube gear is most always dangerous."Not really. With appropriate precautions the danger is extremely small. Anyhow such concerns do not generally stop engineers developing cutting edge technologies during wartime.Tabby 13:50, 16 March 2007 (UTC)Remember that Flowers came from a telephone exchange engineering background. Telephone exchanges are never powered off - the only time they have no power is when power has failed. Individual components might have their fuses removed but as often as not components and circuits were designed to be swapped out live. Flowers would have been experienced and skilled in designing the machine to be permanently on and to have components replaced without a power down. Colossus was actually built from telephone exchange parts so the same principles hold true. Special:Contributions/86.178.121.5|86.178.121.5 (talk) 14:59, 9 March 2012 (UTC)Colossus priority commentsA question about priority for Colossus in certain respects has been discussed at Talk:Bletchley Park. I include this pointer for its relevance to this article. ww 14:28, 22 Jul 2004 (UTC): I placed the following comment there: I reproduce it here as it's much more germane here:: A later note. After reviewing Colossus material in ''great'' detail (to far more depth than we have in our article), I would not describe Colossus as "programmable", at least in anything like the sense we now think of the word.: For one, there was no program, in the sense of an algorithm, with transfers of control, especially conditional transfers. The commonly-reported line about Colossus having some conditional testing is true only in a very limited sense; at the end of each pass of the tape loop, it could compare the contents of counters with pre-set values (in switches), and would print or not print the totals in the counters if they exceeded the preset values.: All Colossus could do, really, was read paper tape, perform certain plug-selected binary operations on one or more of the bits of each frame read from the tape (usually only 2 channels out of 5 were looked at), and depending on the output of that binary function, increment counters. That's all. It was really incredibly specialized to the job of doing statistical analyses on the key/cipher stream of the Tunny cipher.: The novelty of Colossus lies in the technology, more than the architecture: it was certainly the first large-scale electronic digital device, and thereby had a great influence on post-WWII computer development in the UK (since many of the leading lights in that field, such as Newman and Turing, were intimately associated with Colossus). Noel (talk) 04:11, 1 Mar 2005 (UTC)T-52I've moved the following from the article for now:Another, different, teletype cypher machine was designed and built by Siemens ; Halske, the T-52 ''Geheimfernschreiber'' (meaning, 'secret teleprinter'). Early versions of the Siemens machine (the T-52a and T-52b) were used to send signals between Germany and Norway over a cable running through Sweden. The Swedes tapped the cable, copied the traffic, and Arne Beurling, a Swedish mathematician, broke the cypher. Later production versions of the T-52 (there were variants through 'e') were considerably more secure, and quite hard to break even for Bletchley Park. Some of the T-52 traffic was also sent over Luftwaffe Enigma networks which were much more easily broken, and so T-52 traffic was a lower priority for Bletchley Park than might have otherwise been expected.  ;/div;This is true, but is it on-topic? That is, was Colossus ever used for breaking T-52 traffic? User:Matt Crypto|;mdash; Matt 20:18, 6 Dec 2004 (UTC): I have found no reference anywhere that it was used to attack the T-52. However, I haven't found a definite statement of the form "the Colossi were never used to attack Sturgeon", so I suppose it's still theoretically possible. However.... my take on this question would be "very probably not". If you go through the detailed description of the Colossus [here] (make sure to click on the "More Text" links on each image. to see the informative detailed text about that part of Colossus), it's ''incredibly'' specialized to attacking the SZ-40/42. E.g. a very large part of the machine (and tube count) was dedicated to generating the key-stream from the Chi wheels of the SZ-40/42 - e.g. the sizes of the various wheels were wired into the machine, etc. So to attack the T-52 you'd have had to basically rewire the whole machine. I consider it highly unlikely that they did so, given the pressure on them to break into Tunny traffic. Had they wanted to attack the T-52, they probably would have used the Robinson (or some tweaked variant thereof), because on those machines the key-stream was on a second paper-tape, i.e. it would have been a lot easier to adapt it to attack a different machine. Still, the latest reference I've found in the original documents to breaking into Sturgeon was in the summer of '44, at which point it was all being done by hand. I'll keep an eye out to see if I see any references to attacking it later with any machine help. Noel (talk) 02:28, 16 Jan 2005 (UTC)Colossal clangerSorry, this gloating is a little gratuitous and unseemly, but, quoting from an online Microsoft Encarta article ("Computer"):It [Colossus] was used by the team headed by Alan Turing, in the largely successful attempt to crack German radio messages enciphered in the Enigma code.;/div;Now (and correct me and the Wikipedia article if I'm wrong), but I recall that 1) Alan Turing was never the head of a team attacking Tunny (although he did invent "Turingismus"/"Turingery", one type of attack on Tunny); 2) Turing's involvement in Colossus was very limited, if any (although Turing did play a large role in generating some of the ideas behind early computers); and 3) Colossus was never used to attack Enigma (it was used to help break Tunny traffic).Of course, it's not as if Wikipedia articles are always error-free, but I couldn't resist the chance to note this clanger! User:Matt Crypto|;mdash; Matt Crypto;12:54, 21 Feb 2005 (UTC):I've just noticed this comment -- my apologies for being dilatory -- and must agree as I'd seen that clanger myself (AE would probably be something like goof or screw-up, I think). But it's only one of many crypto pseudo-factoids I keep tripping over and I've run out of energy attempting to correct them or publicize them. It's because of their near ubiquity that I have tried several times to include comments in WP crypto articles about the (often un) reliability of much writing -- even ostensibly authoritative writing -- on topics cryptographic.:One has in mind in these cases such things as the invention of the brassiere by a German named Titzling, the installation of the first bathtub by (? -- can't remember which US President, but it was invented as a prank by H L Mencken early in the last century), the exceptionally poisonous qualities of the not quite a spider called here a Daddy Longlegs, ... all of which are repeated and repeated. Is it ever possible to actually exterminate these bits of 'true fact'? Perhaps we should organize all the Daddy Longlegs to go bite them to death? ww 23:41, 6 September 2005 (UTC)Mark I and Mark IIOne of our "to-do" items is to describe the difference between Mk I and Mk II. Here are the results of some work I've done on this topic.The ''General Report on Tunny'' says (pp. 329) that:: "Colossus 2 possessed from the first, quintuple testing, a generous switch panel (including not-not), a versatile plug-panel, spanning, a double bedstead, and a greatly increased simplicity of operation."and: "The chief modifications introduced later were the rectangling gadgets, devices to reduce the effect of doubtful cipher letters, and devices to make wheel-breaking easier."A few words about these:* "quintuple testing" - This refers to the 5-deep shift register through which past values of the (electronically simulated) rotors were passed, so that each character read from the tape could be tested against 5 characters of the key-stream at once, speeding up runs by a factor of 5. ("Colossus remembers characters of the wheel opposite places on the tape 1,2,3,4, back; in particular characters of Psi' {the Psi wheels after the variable stepping control - JNC} not of Psi . ... Thus when Colossus is examining a particular place on Z {the cipher-text - JNC}, it has available for comparison: (i) on the multiply tested wheel, the present character and the characters 1,2,3,4, back. ... (ii) on Z, and on all other wheels, only the present character." - ''General Report on Tunny'', pp. 345) This feature had associated controls as well - "undesignated keys are used in multiple testing wherein five successive positions are tested at once and the wheel-patterns stepped five notches each time; in such cases these keys must be thrown down and other plugging done on the jack control board to provide for five positions stepping" (''Special Fish Report'', pp. 111).* "not-not" - This refers, I believe, the the provision of two levels of negation in the boolean logical network which produced pulse outputs to the counters, to allow "OR" logical testing as well as "AND". The ''Special Fish Report'' says (pp. 111) that it was possible to count (i.e. test for) conditions such as "((character EQUALS value1) OR (character EQUALS value2)" by use of the logical expression "NOT ((character NOT EQUALS value1) AND (character NOT EQUALS value2)".* "a versatile plug-panel"** I believe this refers, in part, to the ability to set the Chi wheel patterns at a panel on the front of Colossus. In the Mark I, these patterns had to be set using jumpers on a panel in the back of the machine, which was particularly inconvenient when the Colossus was used for "wheel-breaking"; the Mark II included a much more convenient panel on the front for setting wheel patterns. One of these patterns was hard wired to have a single 1 bit, and the rest all 0, for use in "rectangling" (a particular cryptanalytic technique used in "wheel-breaking"). ("On wheel-breaking Colossi there is the inestimable boon of a panel on the front of the machine, carrying an ordinary Chi trigger and a special pattern Chi trigger: in place of U-shaped pins, easily inserted plugs are used: they are so much easier that they are often used for setting. Each of the 5 Chi wheels has its ordinary and special patterns adjacent and each is controlled by a 3-way switch whose positions are: down - ordinary and special patterns in; normal - all out; up - single cross in the last position of the ordinary pattern." - General Report on Tunny'', pp. 335)** There were other pluggable operations available as well, some of which were duplicated by switches (e.g. the logical operations, and selection of counters, in the point above) - "Colossus has a jack board for plugs, to be used in controlling it; and also a key board. The key board may be used instead of the plugs for most runs and is more convenient, or in conjunction with the plugs." (''Special Fish Report Page'', pp. 108). However, without detailed operation manuals for the Mark I and Mark II Colossi (which probably never existed), I doubt it will ever be possible to say for sure.* "spanning" - "permit the selection of a stretch or span of tape for study, eliminating all before and after the counting" (''Special Fish Report Page'', pp. 108); i.e. for a given tape, the counters would only be enable for specified stretches of the tape. This was used when parts were known to be garbled, or (even worse) had characters missing (which would have thrown the key-stream and encrypted data out of synch). It was apparently also used for cases in which the stepping of the Psi wheels depended on the data ("introduced originally for P5 limitation" - ''General Report on Tunny'', pp. 329).* "a double bedstead" - "positions for two tapes, but only one runs at once" (''Special Fish Report Page'', pp. 108); i.e. two paper tape transports, so that the operator could be mounting a tape on one, while the other was doing a run.* "a greatly increased simplicity of operation" - I don't know whether there were additional features that were being thought of here, or just the combined effects of all of the above.* "rectangling gadgets" - These are explained in the ''General Report on Tunny'', on pp. 349-351, but they are so arcane (and deeply linked to the fine details of the cryptanalytic techniques used to break wheels) that I don't really fully understand them. Suffice it to say that they make minor changes in how counts are computed and printed.* "devices to reduce the effect of doubtful cipher letters" - This refers to the "not-99" feature, described in the ''General Report on Tunny'' on pp. 343-344: "used to inhibit counting at doubtful letters of cipher replaced by Z {ciphertext - JNC} = 9. Such 9's rarely occur singly. Genuine 9's usually do occur singly. It is therefore only imposed at a 9 adjacent to another 9".* "devices to make wheel-breaking easier." Not sure what this is (other than the rectangling stuff); it might refer to the ability to set the Chi wheel patterns from the front of the machine (referred to above). I'll look into this some more in a bit.Anyway, this is probably way too much detail to put into the article; in particular, some of it is really specific to the arcane details of breaking Fish, and is simply not suitable for the article. Hopefully we can draw on this to see what we do want to put in, though.Do we just want to describe it as "improvements to increase the speed and ease of use"? Noel (talk) 02:04, 11 Mar 2005 (UTC): Nice research! I'll try and add some comments when I'm less tired, but I think this is once instance of a general question: we're going to have to work out how much "Colossus arcana" is appropriate for this article, what belongs in spin-off articles, and what can be left in the literature. Hmm...sleep needed...;-) User:Matt Crypto|;mdash; Matt Crypto;18:17, 11 Mar 2005 (UTC)1990s reconstruction"Even in 2004, Tony Sale notes that "Colossus is so fast and parallel that a modern PC programmed to do the same code-breaking task takes as long as Colossus to achieve a result!". "  That's hard to believe.  Is it actually true (the fact, not the fact that he said it)? --Bubba73 22:28, 26 May 2005 (UTC)In fact, if someone could provide me with test data and a good description of what Colossus would do and how long it would take, I might try to verify that. --Bubba73 02:16, 29 May 2005 (UTC)I have some doubts about that statement about the speed of the Colossus compared to a modern PC.* In "The First Computers: History and Architectures", by Rojas and Hashagen, page 363 has a section "the performance of the Colossus".  It was processing characters from a paper tape at 5,000 characters per second.  Each character was encoded as 5 bits across the tape.  For each character it could do up to 100 boolean calculations on each of the 5 channels.  This is 2.5 million boolean operations per second.* He made the statement in 2004, when I got a 2.4 GHz P4, which was two steps down from the fastest one.  It can perform a bitwise operation in 2 clock cycles, or 1.2 billion per second.  Futhermore, it can do the same operation on 32 bits at once in the same amount of time.  It seems likely that the Colossus was doing he same operation on 5 bits in parallel, since it was doing XOR on 5-bit characters.  So even if the Pentium was used to work on 5 bits of its 43 bits at the time, that amounts to 6 billion boolean operations per second, over 1000 times as fast as the Coolossus.* The book quoted was from 2000 and mentions the same thing about a Pentium.  In 2000 I had a 300 MHz Pentium II, and it wasn't the fastest one at the time.  The original Pentium came out in late 1992 or early 1993 and ran at 60 MHz.  I believe it could do a boolean operation on 32 bits in 2 clock cycles, or 30 million per second.  Even if only 1 bit was worked on at the time (instead of 5 or more in parallel), that is still more than 10 times faster than the Colossus, at the very minimum.* Also, the book says that the Colossus had AND and OR gates.  But the operation it was primarily doing was XOR.  The Pentium has XOR built in, I believe, so it may have taken more than one operation for the Colossus to do a XOR.Bubba73 17:44, 14 Jun 2005 (UTC): Yes, it does look dubious. Sale writes a lot of his simulators in Javascript, which might have an effect ;-) User:Matt Crypto|;mdash; Matt Crypto;09:42, 4 August 2005 (UTC): The Colossus did somewhat better than that, actually; your math is a bit off, especially for the Colossus II (although it's a bit hard to convert Colossus operation rates to instruction equivalents). For one, it had to generate the key-stream (which was were most of its tubes went, actually), which is a certain amount of work (not sure how to turn that into instruction equivalents; you'd have to simulate the rotation of 10 binary-output wheels, each of a different prime size - and then there are the two Motor wheels which make the operation of the others stutter). Then, it did 5 positions at a time (i.e. because of the 5-deep systolic array, it was effectively processing 25K characters per second). Next, it had 5 separate counters, each of which could be programmed to increment on an independent logical expression (which could be as complex as "((character EQ X) OR (character EQ Y))", i.e. 3 logical operations - and perhaps more, I'd have to study the manual to be certain what the largest logical operation was that could be configured; I suspect that if one used the plug cables instead of just the switches, you could get pretty large expressions), and it could increment all of them on each step (i.e. 5K times per second, or 25K increments per second, total).: But it's still considerably slower than contemporary computers (although it was pretty darned fast, even by, say, 1960's standards; in part because it was hardwired to do that one kind of statistical analysis). I think Matt's point about those simulations being in Java is a good one, though! :-) Noel (talk) 04:22, 6 August 2005 (UTC): PS: I forgot to mention that there were bunch of special hacks, which also would increase the time to simulate it, e.g. things like the "not-99" feature. Finally, as to XOR, that was built into Colossus, they didn't have to emulate it with other operations (as they did for OR, which had to be built out of AND and two levels of NOT). Noel (talk) 04:26, 6 August 2005 (UTC):: "it was effectively processing 25K characters per second)"  OK, I had assumed that the five channels were the 5 bits to encode a character.  But if it was doing the same thing to each of 5 channels, and one character was encoded in 5 or 6 bits on each channel, a modern PC can do all of that in parallel.:: "But it's still considerably slower than contemporary computers" The article says that it was a fast, which I was wondering about.  If I could get the details of what it did and some sample data, and it wasn't too involved, I might like to write a program for a modern PC to compare.  Bubba73 04:45, August 6, 2005 (UTC)::: Well, you could take Tony Sale's Java code (available through his web site [here]) and look at it! :-) More seriously, the various Wikipedia articles (this, and the one for the Lorenz SZ 40/42 machine), and particularly the external links from them, will provide you all the information needed. (E.g. links from the Lorenz article will give you the full details of the 12-rotor mechanism which generated the 5-bit-wide keystream - the Colossus included an electronic simulation of that mechanism, so a Colossus simulator will have to include it too.) No, it's not in the most convenient form - but writing the program is the easy part of doing a simulation. A copy of ''From Fish To Colossus'' (it's cheap) would be a really big help. Noel (talk) 15:28, 6 August 2005 (UTC):::: I've just added that book to my wish list.  I haven't seen that book, but as you say, it probably would be better to go to a more direct source.  First, I don't know Java, and second I want to simulate the machine, not simulate a simulator. What's the "hard part" - understanding what it does? Bubba73 16:09, August 6, 2005 (UTC)::::: No, there's nothing spectacularly hard about most of it. It's just that there isn't a single source (excepting perhaps Copeland's forthcoming book, which I've not seen yet as it's not out yet) which clearly and concisely explains all the technical details of what Colossus did, ''in enough detail to produce any sort of semi-correct simulator''. You have to drudge around through all sorts of odd stuff to get the detail that's required - see my investigations above (about the differences between the Mark I and Mark II Colossi) for the kind of digging that is required. E.g. when Tony Sale build the replica, a lot of the actual details on the working of the Boolean logic network which processed the two data-streams (the key-stream and the cipher-stream) and sent outputs to the counters came from reading the [''Special Fish Report''], which was a rather cryptic "how-to" operator's guide! I still don't know of anything which clearly describes this logic network! Noel (talk) 17:30, 6 August 2005 (UTC):::::: I understand.  And that's exactly what I was hoping for - a clear and concise description, enough that I could program it (without spending a great deal of time digging it out.) When is the new book due?  Bubba73 18:11, August 6, 2005 (UTC)::::::: I'm planning on putting in some work on this article, and it should eventually contain a description of what Colossus actually did (although whether any of my writing would ever be clear and concise is very much debatable!). User:Matt Crypto|;mdash; Matt Crypto;18:19, 6 August 2005 (UTC)::::: I guess it also depends on whether you want to simulate the Colossus itself, or simulate the codebreaking tasks that the Colossus performed. Simulating the Colossus would be a somewhat large undertaking, because it's a relatively complex machine and is not described completely in any public documents. Simulating one of the correlation algorithms that Colossus implemented would be pretty straightforward, on the other hand. P.S. There's not a great deal of similarity between Java and JavaScript other than the name ;-) User:Matt Crypto|;mdash; Matt Crypto;18:19, 6 August 2005 (UTC):::::: I guess what I had in mind was doing what Colossus did rather than simulate Colossus itself.  Although the Colossus was a remarkable accomplishment for its time, I don't think it is fair of the article to say that a Pentium-based PC can do the same thing only as fast based on the programs that have been mentioned.  It was mentioned that its speed compared well to computers of the 60s, and that is likely to be true.  Hoever, computers of the 60s were slow compared to todays PCs.  Within the last month I took something that had taken ''x'' time to run on an IBM 360/67 (IBMs fasstest computer as of August 1966) and I wrote it up for my 2.4 GHz Pentium PC, and it was 3,900 times as fast.  I don't know much about Java or JavaScript exccept that I don't thing either one is a good choice for actual encoding or decoding.  Bubba73 23:55, August 6, 2005 (UTC)::::::: I've written a program to do Lorenz encoding/decoding, to give a rough idea of how long it takes on a near-modern PC, my 2.4 GHz P4.  I don't know how much more work the Colossus was doing.  My program encodes/decodes at 40,000,000 characters per second if the data is already in memory and the result is kept in memory.  However, the bottleneck is getting data into and out of the CPU.  My hard drive reads at about 10,000,000 bytes per second, so that is the limiting factor.  So 100 nanoseconds to read a character in, 25 nanoseconds to encode or decode, and 100 nanoseconds to write to disk - 225 nanaoseconds total, or 4.4 million per second.  That is assuming 8 bits to the character.  Since the old data uses 5 bits per character, putting 6 characters in 32 bits would result in 50% faster throughput.  Bubba73 18:01, August 7, 2005 (UTC)Post-War ColossiI replaced "''two survived for many years and were used during the cold war''" with "''A Colossus was kept by GCHQ ;mdash; Copeland (2001) writes, "The last Colossus is believed to have stopped running in 1960. During its later years it was used for training purposes."''". If anyone has a reliable source for the original, we can put it back in, but it seems very unlikely to me that any Colossus was used operationally post-WWII, given how specialised it was to the Lorenz machine. User:Matt Crypto|;mdash; Matt Crypto;00:08, 7 August 2005 (UTC): I seem to recall seeing somewhere that report about two being kept, but I can't lay my hands on it! (Maybe I'm remembering reading it here?) I've checked the AHC 5/3 articles, the Metropolis and Randell books, ''The Secret War'', Cragon, all with no luck. I'll try a few more later. As to why they might have kept some Colossi, I have a number of speculations. (Let me emphasize that these are 100% pure guesses.):* First, I seem to recall a story about the Allies reconditioning Enigma machines and selling them on to various countries (not, of course, telling that that they'd been able to break into them), and using their knowledge of how to break into the Enigma to tap into the other countries communications. (Although given Welchman's revelations that the Enigmas, ''properly used'', would have been almost impossible to break into, I have to wonder about this. Although perhaps they counted on other users making the same kind of mistakes as the Germans had?) So perhaps something similar happened with the SZ40's?:* Second, the Colossi were relatively general machines, outside the specialized circuity for producing the key-streams. Perhaps other countries were using similar teleprinter systems, and the Colossi were modified to break into other systems? Or perhaps they were saved in case other countries adopted similar systems? (The break-in techniques would have worked on similar code-systems.) There is the famous story of the "Russian FISH" machines the Germans handed over to the Western Allies at the end of WWII, which they used to break into a Russian teleprinter system.: In any event, ''The Codebreakers'' (Hinsley and Stipp) does have a record (pp. 185) of the scrapping of one Colossus; most of the standard parts were returned to PO stores. Noel (talk) 04:52, 8 August 2005 (UTC):: We'll have to wait until 2185 for the official declassification ;-) Personally, I could imagine that a Colossus would have been very useful as a training device, and as a prototype for improved machines, while there would be compelling reasons to upgrade to a new machine for any operational use. Counting correlations between bit-streams is a very powerful cryptanalytic idea, and I would agree that GCHQ was engaged in this sort of cryptanalysis soon after WWII, even if it wasn't the Lorenz machine itself. Supposing that's the case, as you mention you'd need to rebuild the key generator part, and (of course, I speculate without any basis) it might well have seemed better to start a new design from scratch, particularly with the benefit of a few years advance in computing technology. The NSA, at least, invested heavily in computers; I'd quite like to think that GCHQ did the same ;mdash; but who knows? User:Matt Crypto|;mdash; Matt Crypto;11:14, 8 August 2005 (UTC): Found it! It's in Michael Smith, ''Station X'' (TV Books, New York, 1998), pp. 226-227: "Two of the Colossus computers .. were taken to Eastcote but the rest were destroyed" .. "The Colossus computers were taken to Cheltenham when GCHQ moved there in 1952 and at least one was still working into the early 1960s." Alas, it has no source notes, so I don't know where the info came from. The book seems relatively carefully researched (and contains no errors I saw), so I'd tend to go with it. Noel (talk) 22:16, 8 August 2005 (UTC):: Well found! Yesterday I went through that book looking for Colossus info, and totally missed that part (must learn to use an index, must learn to use an index...). User:Matt Crypto|;mdash; Matt Crypto;08:44, 9 August 2005 (UTC): Noel, I visited the National Archives last weekend, and found some fun stuff on Colossus. It would seem your thoughts about post-War Colossus use were correct::At the end of the War a number of the Colossus machines including the original were dismantled, but a small number of the more recent versions were moved to Eastcote and subsequently to Cheltenham. With the end of the War the particular purpose for which the machines were designed disappeared, but the nature and reliability of the machines was such that a number of attempts, some more successful than others, were made to make the remaining machines suitable for a number of similar purposes, or, in effect, to generalise them. In the course of these successive changes, new drawings and documents were prepared and, probably to avoid confusion, most of the earlier drawings and documents were destroyed. Thus we have the paradoxical situation in which the success of the machine and the consequent attempts to adapt it to other applications contributed to the loss of much of the detailed information concerning its original form. (D C Horwood, A technical description of COLOSSUS I, August 1973, PRO HW 25/24.);/div;: User:Matt Crypto|;mdash; Matt Crypto;13:51, 20 September 2005 (UTC)The transcript for the PBS Nova program "Decoding Nazi Secrets"  says: "Eight of the ten Colossus machines were destroyed. The remaining two were moved to British secret service headquarters, where they may have played a significant part in the codebreaking operations of the Cold War. In fact, the Russian military had developed a code that was similar to the high command's Fish code. So the techniques invented at Bletchley Park were still to prove vital in a very different kind of conflict. In 1960, the order finally came to destroy the last two Colossus machines."  According to information I have read, an eleventh Colossus was essentially finished at the end of the war, but I have found no reference as to what happened to the eleventh computer.  I presume that all the computers, like the first, were built at the Post Office Research Station at Dollis Hill in NW London.  On 10 July 2006, I emailed Tony Sale asking if he knows what happened to the 11-th computer, but I have not received a reply as of 19 July 2006.  JonEAhlquist 05:43, 19 July 2006 (UTC)"there would be compelling reasons to upgrade to a new machine for any operational use."Quite the opposite. Its 1945 and computers cost huge money. You want to commission an upgrade when you dont absolutely have to? Not a chance. A company would have to have a critical need to consider getting an electronic computer of any kind.Tabby 13:51, 16 March 2007 (UTC):At that time, "computer" meant someone with a calculator, using in large ranks, working out some abstruse calculation. Most of the illustrations are from aerospace companies and they're usually young ladies in a very large hanger type building at lots and lots of desks. As for the calculating machine to which you refer, no one knew about Colossus outside government circles and steps were taken that it remain so. And finally, there was a near complete lack of understanding of what these things could mean if they were made more reliable, more flexible, and available. In the middle 50s there were comments from captains of industry extimating the total industrial need for the things at perhaps a half dozen in the United States. There were lots of critical needs that no one saw. It took a decade plus, and several bankruptcies amongst pioneer compnaies (even with sub rosa funding from military sources) for industry to understand their use and be willing to spend money on them. There is now a general understanding of that, and we're working on getting average folks to understand that there's a lot of promising from suppliers which won't be delivered. Can't agree with you here. ww 22:06, 16 March 2007 (UTC)Churchill's orders:''Winston Churchill specifically ordered the destruction of most of the Colossus machines into "pieces no bigger than a man's hand"''I'm looking for a source for this; the best I can find is a BBC Click Online article . User:Matt Crypto|;mdash; Matt Crypto;08:44, 9 August 2005 (UTC): Jeez, what is this, we're making this article into the latest Wikipedis "scavenger hunt"? :-) I seem to recall seeing the Churchill thing somewhere before (not sure about that exact quote, though); let me have a look. Noel (talk) 01:35, 10 August 2005 (UTC):: Oh, I'm just getting warmed up ;-) User:Matt Crypto|;mdash; Matt Crypto;11:04, 10 August 2005 (UTC)::Churchill couldn't have given any orders at the end of the war,  he wasn't in power... 86.31.101.253 10:37, 8 May 2007 (UTC)::: Churchill was still in power at the end of the war in Europe, and Colossus was used to attack a German cipher system. User:Matt Crypto|;mdash; Matt Crypto;18:52, 8 May 2007 (UTC)The whole paragraph about the end of the war is unsatisfactory.  The obvious inconsistencies about Churchill being in power and ordering the destruction of the computers (only ever mentioned in a TV show and the subsequent book and completely unsourced)The story about the drawings being destroyed is obviously false.  Two computers are known to have been taken by GCHQ to Eastcotte at the end of the war.  The people who operated them would obviously need manuals and programming handbooks and the engineering support staff would need design drawings and details of how the thing worked.  Plus there would have been successor machines within GCHQ.There's a story not being told here,  probably because it's still secret,  but what we have here is speculation and not verified in any way, and not really Wikipedia material.  — Preceding unsigned comment added by Special:Contributions/86.25.231.164|86.25.231.164 (talk) 10:42, 5 June 2011 (UTC);; ;;Scavenger Hunt 2:''Colossus included the first ever use of shift registers and systolic arrays''Also hoping for a source on this one! User:Matt Crypto|;mdash; Matt Crypto;11:04, 10 August 2005 (UTC): That's easy. The systolic arrays is from Cragon, pp. 83. (He also claims Colossus was the first digital system which operatied in synchronous [i.e. centrally clocked] mode, pp. 97.) As for the shift registers, I've seen that in various places (I think I seem to recall Flowers making that claim at one place); one is Randell, ''The Colossus'', pp. 66 (section 7) - which also repeats Cragon's synchronous claim. Colossus also pioneered the use of voltage levels for logic values (instead of phase, as in the Robinsons), which allowed it to be run at very slow speeds, for checkout purposes. Noel (talk) 20:09, 10 August 2005 (UTC)Visited Station X todayAmazing.* :Image:Colossus 2005 08 13.JPGIt's Frankencomputer!  There's a whizzy frame running paper tape at high speed, there are 1940s-style strowger switches clicking madly away, flashing lights blinking--decade counters, not binary. A teletype that wouldn't have been out of place at the 1850 Great Exhibition spews data onto paper, and behind there's rack upon rack of thermionic valves! Reminded me most of all of a 1970s-era PDP-11, to be honest. ;) --Tony SidawayUser talk:Tony Sidaway|Talk;00:32, 14 August 2005 (UTC)The first...what?We currently say that:''Colossus was the first specialised programmable digital electronic computer''We previously have said that:''Colossus was the first programmable (to a limited extent) digital electronic computer''I'm not really happy with either rendition. Personally, I don't think Colossus was programmable in the modern sense ;mdash; it was just configurable. Moreover, the title of "first electrical digital computer" is claimed by the Complex Number Calculator, and "first electronic digital computer" is claimed by the Atanasoff–Berry Computer, both of which appear to predate the Colossi.Jack Copeland's forthcoming anthology on Colossus is titled, "Colossus: The First Electronic Computer". Above, Noel mentions that Colossus was "the first large-scale electronic digital device".This may be too complex a question to resolve ourselves, given that different scholars might give different answers to this question. It might be that we have to opt for describing how others have viewed Colossus within the history of computing. User:Matt Crypto|;mdash; Matt Crypto;16:36, 7 October 2005 (UTC)Which is right...Underneath the third picture it reads:-''In 1994, a team led by Tony Sale began a reconstruction of a Colossus. '''The machine is nearly complete''', and has required over 6,000 man-days of volunteer work.''However the article states:-''In May 2003, the construction of a replica of a Colossus Mark II '''was completed''' by a team led by Tony Sale. It currently is on display in the Bletchley Park Museum in Milton Keynes, Buckinghamshire.''Does someone want to sort this out? I'd do it myself but I dont want to tread on anyones toes.--Timmywimmy 18:46, 28 October 2005 (UTC): Thanks for spotting that! The machine isn't complete, but I believe in May 2003 they reached a milestone where the rebuild was complete enough to perform the task of "setting the Chi wheels". IIRC, there was some grand switching-on ceremony involving Flowers and some member of the British royal family. Very recently, Sale and his team have managed to get the Psi wheels working, and they can get Colossus to do on-machine decipherment (although only one character at present!). User:Matt Crypto|;mdash; Matt Crypto;21:42, 28 October 2005 (UTC): I've removed the statements about being complete as I think they are currently inaccurate; see . I'll try and sort this out soon (if noone gets their first!). User:Matt Crypto|;mdash; Matt Crypto;00:13, 20 December 2005 (UTC)Today we say that the Z3 of Konrad Zuse was the first computer. They fought along time because they didn't know and the Allies did not want that a German designed the first Computer.   --Special:Contributions/88.71.130.213|88.71.130.213 (talk) 16:32, 22 June 2010 (UTC)Speed of tapeThe section "The construction of Colossus" states that the paper tape moved at "40 ft/s = 12 m/s = 30 mph". These speeds are not equal, but only approximately so; even the ones in imperial units differ. Which is the correct speed? There is also no need for speeds to be given in two types of imperial unit. ;mdash; Paul G 12:15, 1 November 2006 (UTC)speed of ColossusAbout a year and a half ago, I was concerned about the article saying that the Colossus was asfast at doing its job as a modern PC.  I think that was based on the JavaScript simulation.  Iwrote my own native program, and it was thousands of times faster than the Colossus.  I triedto be as fair as possible - I simulated each wheel individually, whereas I could have made itfaster.  I processed only one character at the time, even though my program could have done sixcharacters in parallel with less than six times as much computing (since it is a 32-bit CPU,using 5 bits per character).When I read the part about JavaScript, I found a JavaScript program for factoring numbers, orsomething like that.  I made a direct translation, and the native program ran 760 times as fast.  Therefore, JavaScript slows the computer down by a factor of 760 or so.The limiting factor in my program was the time to read the data from disk, not the CPU.  Evenwith that limitation, the speed was a couple of thousand times faster than the Colossus.  Ofcourse, the Colossus was limited by its tape input too.So I thought it was wrong to say that the Colossus was as fast as a modern PC, because it is inthe same ballpark only if you slow the computer down by a factor of 750.  But later I realizedthat what I was doing was original research, so I didn't include it.  Now I see that the partabout the Colossus being as fast as a PC has been taken out.  Bubba73 (talk), 16:23, 23 December 2006 (UTC): Thanks for posting your findings. I think there's sufficient reason to doubt the "fast as a modern PC" claim that we have to exclude it from the article. User:Matt Crypto|;mdash; Matt Crypto;22:14, 28 December 2006 (UTC)::The bbc (reported that Tony Sale, head of the Colossus Rebuild Project, "...argues that the original Colossus was so powerful, it would take current computers the same amount of time to break codes." It might be worth putting in something along the lines of it is claimed that... What do people think? 130.209.6.43 13:46, 11 July 2007 (UTC)missing table infoOur table comparing early computers is well done, but missing at least two entries. One is the Atansoff-Berry machine and the other is the Stibitz relay machines from Bell Labs in the late 30s / early 40s. Both really should be included...  ww 00:03, 8 February 2007 (UTC)It is also rather notably missing the Manchester Small-Scale Experimental Machine, which, IMNERHO, has the strongest claim to be the first true computer. I'd add it, but i can't see how to edit the table - it's done in some remarkably freaky way, i think. -- Tom Anderson 2007-02-16 2200 +0000Also note: the table is mis-labelled: it is a table of five apparently arbitrarily chosen early computers, not the first five.  For example: the Z3 machine was predated by the Z1 and Z2 Zuse computers.  If Z3 is there, surely the earlier models need including?The Manchester Baby you refer to is unquestionably the first stored program general purpose computer in the modern sense.  Computing machines of various sorts had existed for a long time previously.  The table lists a selection of precursor technologies to modern computers: they're none of them really computers in the modern sense.An early computer"The Colossus machines were early computing devices". I'd say they were more than just computing devices, and were computers even if not Turing-complete.Colossi ?Is colossi really the appropriate way to make the word colossus plural?  it seems very odd, is there supporting early documentation for this strange usage? Captain Rotundo 15:26, 15 November 2007 (UTC): I believe there is. User:Matt Crypto|;mdash; Matt Crypto;19:07, 15 November 2007 (UTC)Keep in mind the standard plural form of the english word "colossus" is "colossuses" Captain Rotundo 15:29, 15 November 2007 (UTC)::To my (English speaking) ear, neither seems right, but colussuses sounds worse. Besides, pseudo Latinate plurals are in vogue nowadays. I say let's go with the fad...  ww (talk) 02:51, 27 December 2008 (UTC):::Unlike the wholly indefensible octopi and platypi, ''colossi'' is the correct plural in Latin, as ''colossus'' is a second declension noun. One way to verify this for people who do not own a Latin dictionary is to look at derived adjectives: the usual adjective corresponding to colossus is ''colossal'', which shows the usual second declension paradigm also seen in ''focal'' (;= ''focus/foci'') and ''social'' (;= ''socius/socii'') rather than the third declension paradigm seen in ''temporal'' (;= ''tempus'') or indeed ''octopodal'' or the fourth declension paradigm seen in ''manual'' (;= ''manus''; second declension ''**mani'' would give ''**manal''). Thus the plural colossi is entirely acceptable. Vremya (talk) 14:35, 27 December 2008 (UTC)This only has meaning if one states the number of Colussi completed (disposition would be nice, 100s of bombes were made).  And not variants (Mark I and II) (that's a separate dimension). 00:03, 12 May 2009 (UTC)  —Preceding unsigned comment added by Special:Contributions/143.232.210.38|143.232.210.38 (talk) ;; ;;Wouldn't the appropriate statement be "Colossus machines" or "Colossus computers"?  It seems wrong to change the name of the machine just to pluralize it. Special:Contributions/98.117.210.249|98.117.210.249 (talk) 04:59, 26 November 2014 (UTC)"Colossi" was the terminology used by the people at Bletchley Park and Dollis Hill. --TedColes (talk) 10:01, 26 November 2014 (UTC)dubious edit?A recent edit explains that the colossus secret was maintained because copies were sold to other countries after the war. Therefore the secret had to be kept so others wouldn't learn of it.This seems dubious to me and an echo of the Engima copies sales to other countries after WWII. As it is unsourced, I suggest it deserves to be deleted soon if a credible source is not provided. I'll try to remember to come back in a a week or so to made the correction, but if anyone doesn't want to rely on my increasingly wobbly memory, feel free to make the revision yourself. ww (talk) 02:51, 27 December 2008 (UTC):Yet another odd edit, this one with its own section. I've moed it here pending clarification.::==Trivia::In That Mitchell and webb look it is calimed that in the war a machine called "Colosson" was made that could make seemingly imposable Numberwang calculations and was probably a nod to Colossus.:Some discussion, even explanation of what is meant would be well. ww (talk) 03:24, 1 April 2009 (UTC):::The Enigma machine was used by a number of countries post-war, including a number in South America. The British as a result were able to read these countries diplomatic and other traffic. As a number of these were 'friendly' countries Britain not unnaturally did not disclose this fact.:::At least one of the other South American countries that used the Enigma and had strong links with Germany also eventually went to war over some small islands off its mainland.:::IASTR that China was also another country that bought the Enigma.:::The whole revelation that the British had broken the Enigma and other codes during WW II was not revealed until a book was published around 1977(?), and although I'm not sure of the title, I do remember reading it.  —Preceding unsigned comment added by Special:Contributions/86.112.68.219|86.112.68.219 (talk) 17:14, 21 May 2011 (UTC);; ;;Colossus had nothing to do with Cryptanalysis of the Enigma, it was concerned with cryptanalysis of the Lorenz SZ42 cipher machine. --TedColes (talk) 18:05, 21 May 2011 (UTC)ENIACENIAC (1946) used 17,468 valves, but, unlike Colossus, was not a software programmable machine.The first fully programmable digital electronic computer was the ENIAC which was completed in 1946.Somewhat controversial.  —Preceding unsigned comment added by Special:Contributions/89.178.104.81|89.178.104.81 (talk) 17:06, 9 December 2010 (UTC);; ;;Harvard Mk I not Turing complete?We give as an example of machines that were not Turing complete, the Harvard Mk I.  I believe that I can show that it was indeed Turing complete (see Talk:History_of_computing_hardware#Was_the_Harvard_Mark_I_.22Turing_Complete.22.3F_--_Revisited) - which (although it's clearly WP:OR) puts in doubt this statement in this article.  Since we have no reference for this claim and it is "challenged" - then per WP:V we should remove it...which I'm about to do.  SteveBaker (talk) 13:46, 7 May 2012 (UTC)How much electricity it took to run?I'm curious to know how much electricity to run ?  — Preceding unsigned comment added by Shirishag75 (talk • Special:Contributions/Shirishag75|contribs) 19:36, 2 November 2012 (UTC);;; ;;The Colossus rebuild at The National Museum of Computing take some 8.5KW when running.   The original would have been vey similar.  Krmurrell (talk) 08:15, 4 November 2012 (UTC)Not “fixed program”?I don't think that the description of "fixed-program, single-purpose computer with variable coefficients" is appropriate for the first sentence of the lead. Colossus is widely described as "programmable" (See:  “” and "") or "semi-programmable" (see: "") There is no doubt that the logic function that implemented Cryptanalysis of the Lorenz cipher#Tutte's "1+2 break in"|Tutte's "1+2 break in" was programmed and that the system was developed to perform “wheel breaking” as well as “wheel setting”. I am therefore reverting the lead to the phrase “that was at all programmable.”--TedColes (talk) 10:54, 21 February 2013 (UTC): Just because something is in a printed source, that doesn't mean we should include it, ''if it's not accurate''. People may describe Colossus as 'programmable', but given the ''common'' modern meaning of that term ('stored program'), its use for Colossus is likely to be misleading, and I think we should eschew it. Pretty much ''any'' change to what the machine did/counted (i.e. logical function to be performed and counted) required changing switches/jumpers. The paper tapes (the only other method of entering infomation) only ever entered ''data'', not control information. A better word to describe Colossus is 'configurable'; 'programmable' is ''highly'' misleading to the average reader. Noel (talk) 18:39, 15 February 2014 (UTC)::This proposal is a radical departure from previous practice. Historical descriptions should be sensitive to the context at the time. Comparing Colossus with the Atanasoff–Berry Computer which was fixed function requires a description of the flexibility of what it could perform. It was deliberately designed to have a great deal of ability to do far more than the original functional specification. To limit "programmable" to stored-program systems because of subsequent developments seems to me to downgrade the achievement. Would Noel re-classify ENIAC as re-configurable, not programmable? --TedColes (talk) 19:17, 15 February 2014 (UTC)::: I'd have to investigate Eniac a bit more, and ponder for a bit, before I could say. As I understand it, it was initially designed to need 're-wiring' (via pluggable wires) to do different computations. They soon discovered that this made switching from problem to problem too lengthy, so they developed a 'standard' wiring, added a decoding unit, and the 'programming' was done by setting 'portable function tables' (which I think were like ROM, but done with switches) to include both the 'program' and some read-only data. (This is hard to find out about - it happened later on in the machine's life. The best source I have is "High-Speed Computing Devices" [Engineering Research Associates, 1950].) Again, I would need to check, but I think that was the only way the machine was programmed, via the switches - programs were never read in the way data could be. So on a functionality ''spectrum'' which reaches from things like Colossus on one end, to a full stored-program computer on the other (with the ABC about where Colossus is, since both were special purpose machines that couldn't really be used for more else, although the ABC could probably handle a slightly wider range of problems than Colossus), it lies between the ABC and a SPC. It was 'configurable' in the sense I used of Colossus, but across a far broader range of problems. I'm not sure there is a single word that captures all that?::: I think the problem with saying (in effect) 'we need to be sensitive to the language used at the time' is that I don't think that's viable for an encyclopaedia, because ''today's readers don't speak that language'' (by and large). We have to write it in today's language. To use the word 'programmable' in a meaning which does not match its meaning today is to run a very high risk of leaving the wrong impression in the minds of our readers - surely not a good thing. Noel (talk) 20:01, 25 February 2014 (UTC)Wheel breakingOh, BTW, a quick observation about ''the system was developed to perform “wheel breaking” as well as “wheel setting”''. The Colossus was originally designed/developed only to perform wheel setting. Some time later, one of the cryptanalysts worked out that it could also be used to do wheel breaking, and modifications to help do that (e.g. rectangling - see above for descriptions of changes made to Mark II Colossi) were made to one or more of the later Colossi. I don't have time to track down a reference right now, but if it's needed, i would be happy to do so. Noel (talk) 14:52, 1 March 2015 (UTC)At all programmableAs written I have no idea what "at all programmable" means. It just sounds like poor grammar. Can't you think of a way to phrase it where it has some meaning to someone who is not involved with the debate over fully-programmable or semi-programmable. Can't you just say "programmable". --Richard Arthur Norton (1958- ) (talk) 15:38, 10 March 2015 (UTC):Thanks! --Richard Arthur Norton (1958- ) (talk) 17:18, 10 March 2015 (UTC)::It's been corrected to just say "programmable", but that's in conflict with the article. Per the section "Influence and fate"::::"Colossus was the first combining digital, ('''partially''') programmable, and electronic. The first fully programmable digital electronic computer was the ENIAC which was completed in 1946."  (My emphasis)::The lede no longer attempts to qualify "programmable", effectively taking the claim away from ENIAC.  Some sources say not even ENIAC was fully programmable, but it was a general purpose computer, rather than a code-braking computer.::I propose stating "partially programmable" in the lede to be (currently) consistent.  --A D Monroe III (talk) 17:32, 10 March 2015 (UTC)::: To repeat what I put in the edit comment, the lede sentence does not have to include every qualifier necessary to provide an exact definition. That is what the rest of the lede and the rest of the article are for. Colossus is widely recognized as the first programmable electronic computer. That it was not as fully programmable as later machines does not change that. The later discussion in the article does not conflict with the lede, it gives more detail. If the lede said "fully programmable", then I would concur with your objection, but it does not. Jeh (talk) 18:27, 10 March 2015 (UTC)::: Also: There is no conflict with Eniac because the lede here does not claim "general-purpose". Jeh (talk) 18:28, 10 March 2015 (UTC)::: The article at this time does not really explain what "partially programmable" means re. Colossus, or in general for that matter. There is some discussion of Turing-completeness, but it doesn't say why it isn't Turing-complete or give a clue to the general reader as to what that means. I think that before this confusing term is put back into the lede, the article should be expanded to address this issue. Jeh (talk) 18:35, 10 March 2015 (UTC)* The problem for me was "at all programmable" I couldn't figure out if I should parse it as "at-all programmable" "at all-programmable".Where's the Program?Wow, we love the Colossus, I know, but describing it as a programmable computer is really not accurate.  It is not consistent with modern usage, or WikiP's definition of a computer, or the definition of programming.  It cannot be programmed to follow a series of instructions to implement an algorithm.  Whether it should be called programmable has been called into question quite a number of times over the past decade in this section of notes.I understand that the Colossus fans want it to seem as important as possible.  It was a remarkable achievement, it was groundbreaking technology, and it helped win a World War.   But it did not run a program and should not be called programmable.  (I also question whether it should be called a computer, but I fear that ship has sailed. )Having a few different modes of operation does not make it a programmable computer.  It would need to be able to run programs.  But so many people have called Colossus just that.  Is it hopeless to make WikiP agree with itself?Zebbie (talk) 20:13, 10 March 2015 (UTC):'''Comment''' - to my mind it was a special purpose computer - ie. it could do a set of specific calculations - which of those was programmable - in the way a washing machine is programmable. What was the world first programmable computer?:In the red corner the Colossus, backed by  - also mentions the semi-programmable ambiguity.:In the blue corner the Z3_(computer), backed by  (), [about.com]:in the green corner Z1_(computer), backed by [Computer hope]:Jonpatterns (talk) 21:02, 10 March 2015 (UTC):This may clarify ENIAC#Comparison_with_other_early_computers. Which parts of the description are combined should be clarified - because the more clauses added the greater the potential to be 'first' increases.  Variables include electro-mechanic/ electronic, general or specific purpose, programmable or not, Turing complete or not etc. Jonpatterns (talk) 21:16, 10 March 2015 (UTC):: Sorry but no one considers the Zuse machines, at least not those that were actually built, as programmable ''and''  electronic. They were based on relay logic.:: I don't think anybody has claimed that Colossus was a general-purpose computer.:: ENIAC is still considered the first (fully?) programmable, electronic, ''general purpose'' computer.:: Storing programs in memory came later.:: Maybe we need a nice table of all of these early computers, with columns for "programmable", "fully programmable", "electronic", "general purpose", "Turing complete", "actually constructed and worked", etc., with check-marks in appropriate places.:: Debate on this talk page is one thing, but WP is not written from the opinions of its editors. WP must rely on reliable sources, and Colossus is widely regarded as the first programmable electronic digital computer. When Colossus was revealed, Dr. Mauchly acknowledged that it counted as that. This was quite a blow to him personally, since he thought he'd co-invented the first of those with ENIAC, so who are we to disagree? "Programming" does not have to mean storing instructions in memory and following them step by step, it does not require that any particular set of instructions be supported, it does not even require that branching be supported. The concept of "programming" evolved as the hardware got more complex to support it.:: But even today, the word "programming" is used in a much broader sense than some here seem to acknowledge. Consider that a "programmable read-only memory" does not by itself follow sequences of instructions (though it might be part of a larger system that does); "programming" it consists simply of storing bits in it. Similarly for an FPGA. We don't call those "partially programmable". In the present day (well, almost) "programming" a VCR means setting its timer events. et cetera. Perhaps you think of this as simply meaning "configurable", but that's not the common usage.:: As I said above, the right thing here is not to simply stick "partially" in front of "programmable" every place in this article (that is, in addition to the places where the point is already discussed and described) and call it a day. We need a well-referenced description of just what "partially" means for Colossus, or else it's just a word that conveys no useful information.  Jeh (talk) 21:26, 10 March 2015 (UTC):::The main article qualifies "programmable"; the lede does not, thus it is a misleading summary.  Our sourced information currently states "partially"; we must fix the lede to match the article.  Saying "it's complicated" is not a reason to mislead -- just the opposite.  If it can't be summarized, it should be removed completely.  Besides, currently, it couldn't be simpler; ''add the same single word''.:::I'm all for better explaining what "programmable" means, in the main, in keeping with the sources.  But that's a different issue.  --A D Monroe III (talk) 14:44, 11 March 2015 (UTC):::: The lede doesn't have to summarize every last point in the article, and the opening sentence doesn't have to contain all qualifiers necessary to precisely define the subject. Anyway, most references start out by saying "first programmable, electronic, digital computer" - and then go on to qualify it. Why should this be different? I do not find this "misleading" as long as the article provides the full information.  Jeh (talk) 18:21, 11 March 2015 (UTC)::::: I agree the lede does not need to summarize everything, but it must ''summarize'', not ''contradict''.  I agree a case might be made for Colossus to be first, but the main article says it was not first -- ENIAC was.  The lede is now wrong, according to the main.  If someone wants to "fix" the main, that's fine; bring the sources and balance the views.  If we can't reach any balance, and the statement "programmable" becomes too complicated to summarize, then we take it out of the lede completely, because -- as stated -- it need not summarize everything.  But for now, we must correct the lede, by adding the single word "partially".  --A D Monroe III (talk) 21:41, 11 March 2015 (UTC):::::: A later qualification is not a contradiction. You seem to be stuck on the notion that the word "programmable" in the lede necessarily means "fully programmable, as the term is interpreted for modern computers." Remember, WP is written for the general reader, who does not necessarily know that meaning. The general reader does not know what an algorithm is, what a von Neumann machine is, a conditional branch, etc. Colossus was capable of being "set up" to change the input data being considered, the conditions of the decisions it made, and the configuration of its logic array, via plugboard and selector switches. That's "programming" even by some of today's uses, as I outlined above, and was enough to get Dr. Mauchly to agree that the crown of "first programmable computer" no longer belonged to Eniac. Jeh (talk) 22:03, 11 March 2015 (UTC)::::::: JEH - Are You sure about that?  I've never heard about John Mauchly saying the Colossus was the first programmable computer, and I'm pretty informed on his whole story.  Do you have a source? Zebbie (talk) 14:19, 16 March 2015 (UTC):::::::: This was from an account of the event at which Colossus was revealed. I believe the reporter was Bob Bemer. I'll try to find a ref. Anyway, that aside, the rest of my point still stands: It was as programmable as a lot of other things are that are called programmable. Jeh (talk) 14:28, 16 March 2015 (UTC)::::::::: Maybe you read this.  It says his jaw dropped, but does not say any more than that.   So that is probably not useful as an external validation. Zebbie (talk) 18:10, 16 March 2015 (UTC):We are evidently dancing around definitions of words that can be taken as general or specific.  Who invented, or what was the first "computer" depends on you definition of computer.   That has led to all this scratching around for terms that allow the broadest claim possible, sort of like a patent claim.   Does "computer" without qualifying adjectives, mean a general-purpose electronic computer, or does it mean any device which manipulates numbers automatically?: There is a Table, over here https://en.wikipedia.org/wiki/History_of_computing_hardware#Early_computer_characteristics:Now the adjective "programmable" has been thrown into the mix, apparently to allow the Colossus to differentiate itself from the Atanasoff ABC, which is also an electronic device which manipulates numbers automatically.  But Unlike "Turing Complete,"  "programmable" is a very soft, nebulous term. "Programmable" can be taken to be quite generally or specifically.   I want it to mean "it runs a program that is a list of mathematical steps" and you want it to mean "you can flip a switch to do one rinse cycle or two."  Zebbie (talk) 18:19, 16 March 2015 (UTC)::"Programmable" is indeed a relatively nebulous term. The Jacquard loom has often been described as such. Professor Brian Randell in his seminal paper that first made the existence of Colossus widely known () lists its particular features as follows: Electronic storage registers changeable by an automatically controlled sequence of operations, Conditional (branching) logic, Logic functions preset by patch panels or switches, or conditionally selected by telephone relays, Fully automatic operation, Variable programming by means of lever keys which controlled gates which could be connected in series or parallel as required, Calculated complicated Boolean functions involving up to about 100 symbols.::He is clear that there was conditional branching and he uses the word "programming". --TedColes (talk) 11:38, 17 March 2015 (UTC)::: That seems pretty definitive to me. TY for finding it. Jeh (talk) 21:42, 17 March 2015 (UTC)Randall's paper was written very early on, before much had been revealed about Colossus. I would not rely on it for fine technical details.In particular, Colossus - much as I admire it, and much as it had a huge impact on the world - did not have 'conditional branching', because it did not have a program (in the normal sense of that term, i.e. a set of algorithmic steps). It did have the ability to increment counters depending on whether or not certain conditions were met, but that is not 'conditional branching'.The Colossus was no more 'programmable' than the Atanasoff-Berry Computer - so if you're going to accept that definition of 'programmable' (I myself find 'configurable' a more approriate term) you have to list the ABC as the the first 'programmable' digital electonic computing device. So either way the Colossus isn't the first 'programmable electronic digital computing device'. Noel (talk) 15:14, 31 March 2015 (UTC):Colossus printed out the current count only if it exceeded the "set total" (see the section "Operation" in: ). There was also a feature for suspending counting and incrementing of the key sequence circuits, if a second count needed to be printed before the printer had finished a preceding one. These are both quite clearly conditional branching.:The Atanasoff-Berry Computer is usually described as being designed only for the solution of systems of linear equations. Colossus, on the other hand, could perform a wide variety of tasks to help with decrypting Tunny messages. These ranged from implementing Cryptanalysis of the Lorenz cipher#W. T. Tutte's "1+2 break in"|"Tutte's 1+2 break-in" to performing a frequency count of the characters in a "delta "de-''chi''" (see: ).:Perhaps it is also worth mentioning that the Atanasoff-Berry Computer was an experiment that was not very successful and was abandoned, whereas Colossus was a resounding success with a total of ten in use at the end of WWII, even though it did not become at all widely known about for three decades. --TedColes (talk) 20:23, 31 March 2015 (UTC):: I think the above gives ample support for "programmable", unmodified, in the lede. But how to succinctly phrase it in the article, and not give the impression that it was ''as'' programmable as (for example) an IBM 704, is another question. Jeh (talk) 08:24, 1 April 2015 (UTC):: Suppose the lede is rewritten as follows. Besides covering the "not as programmable as later computers" point, I rearranged it some so as to flow better. Note, the mention that Colossus was not used for attacking Enigma doesn't really belong in the lede, but I think that's the only thing I left out. Note also that the Lorenz cipher was used on teleprinter circuits, not telegraphy!'''Colossus''' was the name of a series of computers developed for British codebreakers during World War II to help in the cryptanalysis of the Lorenz cipher. Colossus used thermionic valves (vacuum tubes and thyratrons) to perform Boolean operations and digital calculations, and some details of its operations could be changed via switches and patch-panel wiring. Colossus is thus regarded as the world's first programmable, electronic, digital computer, although its programming was not as flexible as that of later computers such as ENIAC.Colossus was designed by the engineer Tommy Flowers to solve a problem posed by mathematician Max Newman at the Government Communications Headquarters#Government Code and Cypher School (GC;CS)|Government Code and Cypher School (GC;CS) at Bletchley Park. Alan Turing's use of probability in cryptanalysisSee Banburismus contributed to its design.The prototype, '''Colossus Mark 1''', was shown to be working in December 1943 and was operational at Bletchley Park by 5 February 1944. An improved '''Colossus Mark 2''', which used shift registers to quintuple the speed,1983 first worked on 1 June 1944, just in time for the Normandy Landings. Ten Colossi were in use by the end of the war.They permitted the Allies access to some of the encrypted teleprinter messages between the German High Command (OKW) and their army commands throughout occupied Europe.The destruction of most of the Colossus hardware and blueprints, as part of the effort to maintain a project secrecy that was kept up into the 1970s, deprived most of those involved with Colossus of credit for their pioneering advancements in electronic digital computing during their lifetimes. A functioning replica of a Colossus computer was completed in 2007 and is on display at The National Museum of Computing at Bletchley Park.: Well? It's been over three weeks since I proposed the above, and no comments? Jeh (talk) 20:37, 13 April 2015 (UTC)::I don't think it is much of an improvement, and comparisons with ENIAC surely belong further on and not in the lead. To say "some details of its operations could be changed via switches and patch-panel wiring" is seriously understating the case. I have just received notification from my local library that they have in the copy of Tommy Flowers' journal article “The Design of Colossus” for me to collect. --TedColes (talk) 22:00, 13 April 2015 (UTC):::I think it's fine to have ENIAC mentioned in the lead.  Claims to "first" can be troll bait, where nationalistic editors bring their nationalistic sources to "prove" the WP:TRUTH.  Unless we want to remove all claims to being first from the lede, we should at least acknowledge the other claims to keep this pointless nonsense to a minimum.  --A D Monroe III (talk) 23:04, 13 April 2015 (UTC)::: This whole discussion started because someone wanted a clarification of what "at all programmable" meant. But there was objection to simply saying "programmable" with no qualifications, as clearly Colossus was not ''as'' flexibly programmable as later computers; there was strong opinion that this should be clarified in the lede.::: While "some details of its operations could be changed via switches and patch-panel wiring" may seem to be understating the case, it is unquestionably true. Perhaps we should drop the word "some"? Jeh (talk) 23:16, 13 April 2015 (UTC)::::I am planning to amend the article by including details of how Colossus was programmed. After that, and when others have had an opportunity to make amendments, would I suggest be a better time to amend the lead. --TedColes (talk) 10:04, 14 April 2015 (UTC)It must be noted ('''again'''!) that:* The following program demonstrates that it is possible to emulate a "SUBLEQ computer" with code inside a single 'while(1)' loop - which can be implemented without a conditional instruction of any kind providing the machine can be made to unconditionally loop over the entire code (eg by looping a paper tape containing program instructions):// Initialization:typedef unsigned char byte ;int lut [ 256 ]{1, 1, 1, 1, 1, 1, 1, ....  // 128 ones.0, 0, 0, 0, 0, 0, 0, ....  // 128 zeroes.} ;byte mem [...whatever...] = { ...whatever... } ;  // The initial state of memory in the SUBLEQ machineint PC = 0 ; // The SUBLEQ machine's program counter.// Runtime:while ( 1 )  // (Implemented via a paper tape loop){// Read instruction operands from the program counter location.int a = mem[PC++] ;int b = mem[PC++] ;int c = mem[PC++] ;// Perform subtraction:mem[b] -= mem[a] ;// Use lookup table to extract sign of mem[b] so that:// c is multiplied by 1 and added to the program counter if mem[b];=0// c is multiplied by 0 and added to the program counter if mem[b];0.PC += lut[mem[b]+128] * c ;}* One instruction set computer points out that a machine that implements nothing more than the 'SUBLEQ' instruction is Turing complete.* Turing completeness says that a machine is considered to be Turing complete if it can emulate a Turing complete machine.* The Church-Turing thesis says that all Turing complete machines are equivalent - if sufficient time and memory is available.So, even without a conditional instruction of ANY kind, or even a "JUMP" instruction - a machine with simple memory addressing and minimal arithmetic capability alone can be Turing complete - and that means that given time and memory, it can emulate any modern computer, including the one you're reading this post on.I'm not sure whether Colossus could do something like the code above...you need the ability to index into memory using a variable.  But you can't claim that the lack of a conditional instruction proves that it's not "programmable" or not "Turing-complete".SteveBaker (talk) 07:34, 16 April 2015 (UTC):Fascinating!  But I think we've wandered far into WP:SYNTH land.  We should focus on sources.  Right now, all we have in the article is one source saying Colossus ''could'' be considered Turing Complete if all 10 of them were operated together in some fashion, which may fail WP:UNDUE.  We also have other articles on Atanasoff–Berry Computer|ABC, Z3, and ENIAC with their own sourced claims to "first computer".  Let's just look for sources on programming for each, and find a balance for those.  --A D Monroe III (talk) 21:13, 16 April 2015 (UTC):: Certainly my argument is WP:SYNTH - it's my own idea - and I do not deny that for one moment!  But none the less, it is a pretty convincing proof to those who understand what we're discussing here.  So you're 100% right...we can't use it to say "Colossus was Turing Complete" without a pretty solid reference to back it up.:: '''BUT''' we ''should'' use this synthesised knowledge to avoid saying outright that: "''Colossus was NOT Turing Complete''" when we know it's untrue, or at best highly debatable.  If some reference that we dredge up from someplace is unreliable because the author didn't consider an argument like mine, then it's better to either leave it out - or use words like "''Professor XXX says that Colossus was not turing complete - but this is disputed''" - or better still...just say nothing on the subject on grounds that we don't have sufficient referenced material to do a good job of conveying the truth.:: If a single source says "''The Sky is Purple with Green spots''" - we're not going to use it to definitively state that "''The sky is not blue''" - no matter the qualifications of the author or the prestigiousness of the source.:: IMHO: Since there is considerable debate and confusion over what is or is not turing complete - and whether turing-completeness is or is not the bright-line definition for being "a computer" or whether "programmable" has to imply loops and conditionals...and because the very meaning of the word "computer" changes every decade or so - I '''''really''''' don't think it's encyclopedic to label one or other of these machines as "The First Computer" - or to enter into the discussion of whether such-and-such machine is a "true" computer or not.  The machine that was "The First Computer" was different in 1960 than it was in 1980 and in 2000 - whatever we say will probably be wrong again in 2020.:: We just need to say what it was, what it did and when it did it...and if we need comparisons with other earlier or contemporary machines then let's stick to concrete features and avoid vague (and time-varying) things like "The first programmable computer".  SteveBaker (talk) 18:41, 17 April 2015 (UTC)::: But if there's a RS that says "first programmable computer", we can and should quote and cite that. Jeh (talk) 19:52, 17 April 2015 (UTC):::::If the source is recent...perhaps...but these terms have both changed meaning repeatedly over the years. SteveBaker (talk) 00:39, 19 April 2015 (UTC)::::Professor Randell is accepted by many as being a reliable source. In his 1980 paper he says Certainly it seems fair to classify the COLOSSUS as a special-purpose program-controlled electronic digital computer. It was, however, externally programmed, and there is no question of its having been a stored-program computer. This final step in the invention of the modern computer had to await the development of a practical highspeed store, capable of holding a large number of binary digits.::::Howard Campaigne of the US National Security Agency said the following in his introduction to Flowers' 1983 paper. My view of Colossus was that of cryptanalyst-programmer. I told the machine to make certain calculations and counts, and after studying the results, told it to do another job. . . . It was programmable by means of a switchboard. Toggle switches enabled one to choose among binary functions of the input, which was a long string of cipher text, and then the outputs of these functions were counted. At the end of each pass of the input string, the counts were used to control the printer, suppressing those counts of lesser interest.::::Are these statements sufficient to support the use of the word "programmable"? --TedColes (talk) 07:15, 18 April 2015 (UTC)::::: Perhaps.::::: The idea that having the machine be programmed via switches and plugboards somehow invalidates the term "programmable" (and by implication, the word "computer") is tricky and technical.  The Von Neumann architecture - that was for a while, the model for most modern computers - requires that program and data be stored in the same memory.  The Colossus was definitely '''not''' a Von Neumann machine...and for a while, that was the common definition of "computer".  But these days, a small, embedded computer may well have its program instructions stored in ROM - quite separately from its RAM.  I don't think THAT distinction means that those machines are not programmable - just not programmable right now. Swap the ROM for an EPROM or a Flash memory - and (logically) nothing changes...it's still a "computer" and it's still "programmable" no matter how the programming instructions are stored.  Colossuses program instructions came from a "ROM" that just happened to be implemented with switches and plugboards - I don't see that as being at all significant.  You could (with some degree of effort) replace the ROM memory in almost any computer with a bunch of toggle switches - and that wouldn't change the fact that it's a computer or that it's programmable. SteveBaker (talk) 00:39, 19 April 2015 (UTC){Resetting indent..}I think it all depends on what one means by the term 'programmable'. ''These days'', when it comes to '''computing''' devices (as opposed to, say, TV remote controls), it has ''mostly'' come to be a synonym for 'stored program' (and whether that storage is in ROM or RAM doesn't, I think, matter that much). Colossus was clearly not a 'stored program' computing machine, so were we to call it 'programmable', we'd possibly be misleading what I would guess to be the vast majority of Wikipedia's readers, for whom 'programmable' == 'stored program'. Noel (talk) 17:16, 20 October 2015 (UTC)Duplicate article for Colossus ComputerThis shows up at and is of poorer quality than this article. The "simple" version is shown first by Google, at least for the search I did.--FScot2 (talk) 09:40, 12 January 2016 (UTC)
B (disambiguation)'''B''' is a programming language developed at Bell Labs circa 1969.  It is the work of Ken Thompson with Dennis Ritchie.B was derived from BCPL, and its name may be a contraction of BCPL.  Thompson's coworker Dennis Ritchie speculated that the name might be based on Bon, an earlier, but unrelated, programming language that Thompson designed for use on Multics.B was designed for recursive, non-numeric, machine independent applications, such as system and language software.HistoryInitially Ken Thompsonchistand later Dennis Ritchieburdeveloped B basing it mainly on the BCPL language Thompson used in the Multics project. B was essentially the BCPL system stripped of any component Thompson felt he could do without in order to make it fit within the memory capacity of the minicomputers of the time. The BCPL to B transition also included changes made to suit Thompson's preferences (mostly along the lines of reducing the number of non-whitespace characters in a typical program).chistMuch of the typical ALGOL-like syntax of BCPL was rather heavily changed in this process, such as the :=;/tt; and =;/tt; operators which were replaced with =;/tt; for assignment and ==;/tt; for equality test. (The ;;/tt; and |;/tt; of BCPL was later changed to ;;;/tt; and ||;/tt; in the transition to what is now known as C.)chistThe assignment operator went back to "=" of Rutishauser's programming language Superplan, which had influenced ALGOL 58, that added a colon.Thompson invented arithmetic assignment operators for B, using x =+ y to add y to x (in the C programming language the operator is spelled as +=).  B also introduced the increment and decrement operators (++ and --); Their prefix or postfix position determines whether the value is taken prior or post alteration of the operand. These innovations were not in the earliest versions of B. Some guess that they were created for the auto-increment and auto-decrement address modes of the DEC PDP-11. This is historically impossible as there was no PDP-11 at the time that B was developed.chistB is typeless, or more precisely has one data type: the computer word. Most operators (e.g., +, -, *, /) treated this as an integer, but others treated it as a memory address to be dereferenced. In many other ways it looked a lot like an early version of C. There are a few library functions, including some that vaguely resemble functions from the stdio.h|standard I/O library in C.burEarly implementations were for the DEC PDP-7 and PDP-11 minicomputers using early Unix, and Honeywell GE 645 36-bit mainframes running the operating system GCOS. The earliest PDP-7 implementations compiled to threaded code, and Ritchie wrote a compiler using TMG which produced machine code. In 1970 a PDP-11 was acquired and threaded code was used for the port; an assembler, dc;/tt;, and the B language itself were written in B to bootstrap the computer. An early version of yacc was produced with this PDP-11 configuration. Ritchie took over maintenance during this period.chistreaderThe typeless nature of B made sense on the Honeywell, PDP-7 and many older computers, but was a problem on the PDP-11 because it was difficult to elegantly access the character data type that the PDP-11 and most modern computers fully support. Starting in 1971 Ritchie made changes to the language while converting its compiler to produce machine code, most notably adding data typing for variables. During 1971 and 1972 B evolved into "New B" (NB) and then C.chistB is almost extinct, having been superseded by the C language.plbHowever, it continues to see use () on GCOS mainframes, and on certain embedded systems () for a variety of reasons, including limited hardware in the small systems; extensive libraries, tools, licensing cost issues; and simply being good enough for the job on others.  The highly influential AberMUD was originally written in B.ExamplesThe following example is from the ''Users' Reference to B'' by Ken Thompson:bur/* The following function will print a non-negative number, n, tothe base b, where 2;=b;=10.  This routine uses the fact thatin the ASCII character set, the digits 0 to 9 have sequentialcode values.  */printn(n, b) {extrn putchar;auto a;if (a = n / b)        /* assignment, not test for equality */printn(a, b); /* recursive */putchar(n % b + '0');};/syntaxhighlight;See alsoInformation technologyNotesReferencesExternal links* ''''* '''', Dennis M. Ritchie. Puts B in the context of BCPL and C.* '''', Ken Thompson. Describes the PDP-11 version.* '''', S. C. Johnson ; B. W. Kernighan, Technical Report CS TR 8, Bell Labs (January 1973). The GCOS version on Honeywell equipment.* ''[B Language Reference Manual]'', Thinkage Ltd. The production version of the language as used on GCOS, including language and runtime library.